{
    "openapi": "3.0.0",
    "info": {
        "title": "GoX",
        "description": "GoX API Documentation.",
        "version": "1.0.0"
    },
    "paths": {
        "/gridetech_api/base": {
            "post": {
                "tags": [
                    "Base"
                ],
                "operationId": "/base",
                "parameters": [
                    {
                        "name": "salt_key",
                        "in": "query",
                        "description": "The salt key in query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MQ=="
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/newbase": {
            "post": {
                "tags": [
                    "Base"
                ],
                "operationId": "/newbase",
                "parameters": [
                    {
                        "name": "salt_key",
                        "in": "query",
                        "description": "The salt key in query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MQ=="
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Login",
                "operationId": "/user/login",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLogin"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Signup",
                "operationId": "/user/signup",
                "requestBody": {
                    "description": "User Signup",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignupInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSignup"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/social/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Social Login",
                "operationId": "/user/social/login",
                "requestBody": {
                    "description": "User Social Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSocialLoginInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSignup"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/forgot/otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Forgot Password",
                "operationId": "/user/forgot/otp",
                "requestBody": {
                    "description": "User Forgot Password",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserForgotInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForgot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/reset/otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Reset Password",
                "operationId": "/user/reset/otp",
                "requestBody": {
                    "description": "User Reset Password",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserReset"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Verify",
                "operationId": "/user/verify",
                "requestBody": {
                    "description": "User Verify",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserVerifyInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserVerify"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Refresh",
                "operationId": "/user/refresh",
                "responses": {
                    "200": {
                        "description": "Returns settings for the application"
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Provider Login",
                "operationId": "/provider/login",
                "requestBody": {
                    "description": "Provider Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderLoginInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderLogin"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/provider/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Provider Signup",
                "operationId": "/provider/signup",
                "requestBody": {
                    "description": "Provider Signup",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderSignupInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderSignup"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/gridetech_api/api/v1/provider/forgot/otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Provider Forgot Password",
                "operationId": "/provider/forgot/otp",
                "requestBody": {
                    "description": "Provider Forgot Password",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderForgotInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderForgot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/provider/reset/otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Provider Reset Password",
                "operationId": "/provider/reset/otp",
                "requestBody": {
                    "description": "Provider Reset Password",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderResetInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderReset"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/promocode/{service}": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "apiv1.user.promocode.service",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "Admin service",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRANSPORT",
                                "ORDER",
                                "SERVICE"
                            ],
                            "example": "transport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/check/request": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "apiv1.provider.check.request",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Provider Current Latitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Provider Current Longitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/accept/request": {
            "post": {
                "tags": [
                    "Common"
                ],
                "description": "Accept Request",
                "operationId": "apiv1.provider.accept.request",
                "requestBody": {
                    "description": "Accept Request",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AcceptRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcceptRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/cancel/request": {
            "post": {
                "tags": [
                    "Common"
                ],
                "description": "Cancel Request",
                "operationId": "apiv1.provider.cancel.request",
                "requestBody": {
                    "description": "Cancel Request",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CancelRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/ongoing": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "api.v1.user.ongoing",
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/chat": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "description": "User Chat Save",
                "operationId": "api.v1.add.chat",
                "requestBody": {
                    "description": "User Chat Save",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAddChatInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chat message saved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAddChat"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Shop Login",
                "operationId": "/shop/login",
                "requestBody": {
                    "description": "Shop Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopLoginInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopLogin"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/provider/send-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Provider Send OTP",
                "operationId": "api.v1.provider.send-otp",
                "requestBody": {
                    "description": "Provider Send OTP",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderSendOTPInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderSendOTP"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/provider/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Provider Verify OTP",
                "operationId": "api.v1.provider.verify-otp",
                "requestBody": {
                    "description": "Provider Verify OTP",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderVerifyOTPInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderVerifyOTP"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/provider/profile": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "api.v1.provider.profile",
                "responses": {
                    "200": {
                        "description": "Returns profile details of provider",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Provider"
                ],
                "description": "Provider Profile Update",
                "operationId": "api.v1.provider.profile.update",
                "requestBody": {
                    "description": "Provider Profile Update",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderProfileUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderProfileUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/password": {
            "post": {
                "tags": [
                    "Provider"
                ],
                "description": "Provider Password Update",
                "operationId": "api.v1.provider.password.update",
                "requestBody": {
                    "description": "Provider Change password",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderPasswordUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderPasswordUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/updatelanguage": {
            "post": {
                "tags": [
                    "Provider"
                ],
                "description": "Provider Language Update",
                "operationId": "api.v1.provider.updatelanguage.update",
                "requestBody": {
                    "description": "Provider Language Update",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderLanguageUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Language updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderLanguageUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/notification": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "api.v1.provider.notification",
                "responses": {
                    "200": {
                        "description": "Returns notification of logged in provider",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/device_token": {
            "post": {
                "tags": [
                    "Provider"
                ],
                "description": "Provider device token",
                "operationId": "api.v1.provider.devicetoken.update",
                "requestBody": {
                    "description": "Provider device token Input to update in db",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderDeviceTokenInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderDeviceToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/card": {
            "get": {
                "tags": [
                    "Provider Card"
                ],
                "operationId": "api.v1.provider.card",
                "responses": {
                    "200": {
                        "description": "Returns card details of provider",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Provider Card"
                ],
                "description": "Provider card Add",
                "operationId": "api.v1.provider.card.add",
                "requestBody": {
                    "description": "Provider Profile Add",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCardUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Add card for provider",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCardUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/card/{id}": {
            "delete": {
                "tags": [
                    "Provider Card"
                ],
                "operationId": "api.v1.provider.card.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "provider card id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "card deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/wallet": {
            "get": {
                "tags": [
                    "Provider Wallet"
                ],
                "operationId": "api.v1.provider.wallet",
                "responses": {
                    "200": {
                        "description": "Returns wallet transactions of provider",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/add/money": {
            "post": {
                "tags": [
                    "Provider Wallet"
                ],
                "description": "Provider Add Money",
                "operationId": "api.v1.provider.add.money",
                "requestBody": {
                    "description": "Provider Add Money",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderAddMoneyInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Saving money in user wallet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderAddMoney"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/wallet/transfer": {
            "post": {
                "tags": [
                    "Provider Wallet Transfer"
                ],
                "description": "Provider Wallet Transfer",
                "operationId": "api.v1.provider.wallet.transfer",
                "requestBody": {
                    "description": "Provider Wallet Transfer",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderWalletMoneyInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Wallet amount successfully transferred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderWalletMoney"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/bankdetails/template": {
            "get": {
                "tags": [
                    "Provider Bank Detail"
                ],
                "operationId": "api.v1.provider.bankdetails.template",
                "responses": {
                    "200": {
                        "description": "Returns Bank detail template",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/addbankdetails": {
            "post": {
                "tags": [
                    "Provider Bank Detail"
                ],
                "description": "Provider Add Bank Details",
                "operationId": "api.v1.provider.addbankdetails",
                "requestBody": {
                    "description": "Provider Add Bank Details",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderAddBankDetailsInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderAddBankDetails"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/editbankdetails": {
            "post": {
                "tags": [
                    "Provider Bank Detail"
                ],
                "description": "Provider Add Bank Details",
                "operationId": "api.v1.provider.editbankdetails",
                "requestBody": {
                    "description": "Provider Add Bank Details",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderEditBankDetailsInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderEditBankDetails"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/listdocuments": {
            "post": {
                "tags": [
                    "Provider Documents"
                ],
                "description": "Provider Documents list",
                "operationId": "api.v1.provider.listdocuments.list",
                "requestBody": {
                    "description": "Provider Documents list",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderDocumentsListInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Documents list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderDocumentsList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/documents": {
            "post": {
                "tags": [
                    "Provider Documents"
                ],
                "description": "Provider Documents add",
                "operationId": "api.v1.provider.documents.add",
                "requestBody": {
                    "description": "Provider Documents add",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderDocumentsInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Documents created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderDocuments"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/vehicle": {
            "post": {
                "tags": [
                    "Provider Vehicle"
                ],
                "description": "Provider Vehicle add",
                "operationId": "api.v1.provider.vehicle.add",
                "requestBody": {
                    "description": "Provider Vehicle add",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderVehicleInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderVehicle"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/vehicle/edit": {
            "post": {
                "tags": [
                    "Provider Vehicle"
                ],
                "description": "Provider Edit Vehicle",
                "operationId": "api.v1.provider.vehicle.edit",
                "requestBody": {
                    "description": "Provider Edit Vehicle",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderEditVehicleInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderEditVehicle"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/onlinestatus/{id}": {
            "get": {
                "tags": [
                    "Provider Online"
                ],
                "operationId": "api.v1.provider.onlinestatus.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "provider status. 1 / 0 . 1 for on / 0 for off",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/city": {
            "post": {
                "tags": [
                    "Provider Clear Request"
                ],
                "description": "Provider Clear Request",
                "operationId": "api.v1.provider.city.change",
                "requestBody": {
                    "description": "Provider Clear Request",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderClearRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns provider profile data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderClearRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/adminservices": {
            "get": {
                "tags": [
                    "Provider Admin Service"
                ],
                "operationId": "api.v1.provider.adminservices",
                "responses": {
                    "200": {
                        "description": "Returns admin services of provider",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/{adminService}/dispute": {
            "get": {
                "tags": [
                    "Dispute List"
                ],
                "operationId": "api.v1.provider.adminService.dispute",
                "parameters": [
                    {
                        "name": "adminService",
                        "in": "path",
                        "description": "admin service name. ride / services / order",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "services"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns user Dispute list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/send-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Send OTP",
                "operationId": "api.v1.user.send-otp",
                "requestBody": {
                    "description": "User Send OTP",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSendOTPInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSendOTP"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "User Verify OTP",
                "operationId": "api.v1.user.verify-otp",
                "requestBody": {
                    "description": "User Verify OTP",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserVerifyOTPInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserVerifyOTP"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                }
            }
        },
        "/gridetech_api/api/v1/user/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "api.v1.user.profile",
                "responses": {
                    "200": {
                        "description": "Returns profile details of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "User Profile Update",
                "operationId": "api.v1.user.profile.update",
                "requestBody": {
                    "description": "User Profile Update",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/password": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "User password Update",
                "operationId": "api.v1.user.password.update",
                "requestBody": {
                    "description": "User Profile Update",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPasswordUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPasswordUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/updatelanguage": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "User Language Update",
                "operationId": "api.v1.user.updatelanguage.update",
                "requestBody": {
                    "description": "User Language Update",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLanguageUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Language updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLanguageUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/menus": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "api.v1.user.menus",
                "responses": {
                    "200": {
                        "description": "Returns menus available of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/countries": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "User countries",
                "operationId": "/user/countries",
                "requestBody": {
                    "description": "User countries",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCountriesInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns user countries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCountries"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/reasons?type={type}": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "api.v1.user.reasons",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "ADMIN SERVICE NAME (TRANSPORT / SERVICE / ORDER)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "TRANSPORT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns user reasons for admin services",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/notification": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "api.v1.user.notification",
                "responses": {
                    "200": {
                        "description": "Returns notification of logged in user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/device_token": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "User Update device token",
                "operationId": "api.v1.user.devicetoken.update",
                "requestBody": {
                    "description": "User device token Input to update in db",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeviceTokenInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDeviceToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/card": {
            "get": {
                "tags": [
                    "User Card"
                ],
                "operationId": "api.v1.user.card",
                "responses": {
                    "200": {
                        "description": "Returns card details of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Card"
                ],
                "description": "User card Add",
                "operationId": "api.v1.user.card.add",
                "requestBody": {
                    "description": "User Profile Add",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UsercardUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Add card for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCardUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/card/{id}": {
            "delete": {
                "tags": [
                    "User Card"
                ],
                "operationId": "api.v1.user.card.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user card id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "card deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/wallet": {
            "get": {
                "tags": [
                    "User Wallet"
                ],
                "operationId": "api.v1.user.wallet",
                "responses": {
                    "200": {
                        "description": "Returns wallet transactions of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/add/money": {
            "post": {
                "tags": [
                    "User Wallet"
                ],
                "description": "User Add Money",
                "operationId": "api.v1.user.add.money",
                "requestBody": {
                    "description": "User Add Money",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAddMoneyInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Saving money in user wallet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAddMoney"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/wallet/transfer": {
            "post": {
                "tags": [
                    "User Wallet Transfer"
                ],
                "description": "User Wallet Transfer",
                "operationId": "api.v1.user.wallet.transfer",
                "requestBody": {
                    "description": "User Wallet Transfer",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserWalletMoneyInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Wallet amount successfully transferred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWalletMoney"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/address": {
            "get": {
                "tags": [
                    "User Manage Address"
                ],
                "operationId": "api.v1.user.address",
                "responses": {
                    "200": {
                        "description": "Returns addresses of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/address/add": {
            "post": {
                "tags": [
                    "User Manage Address"
                ],
                "description": "User Add Address",
                "operationId": "api.v1.user.add.address",
                "requestBody": {
                    "description": "User Add Address",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAddAddressInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address added to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAddAddress"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/address/update": {
            "post": {
                "tags": [
                    "User Manage Address"
                ],
                "description": "User Update Address",
                "operationId": "api.v1.user.update.address",
                "requestBody": {
                    "description": "User Update Address",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateAddressInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address added to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdateAddress"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/address/{id}": {
            "delete": {
                "tags": [
                    "User Manage Address"
                ],
                "operationId": "api.v1.user.address.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user address id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/promocode/{adminService}": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "api.v1.user.promocode.serviceName",
                "parameters": [
                    {
                        "name": "adminService",
                        "in": "path",
                        "description": "admin service name. TRANSPORT / ORDER / SERVICE",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "SERVICE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns user available promocodes for required service type",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/city": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "User Change City",
                "operationId": "api.v1.user.city.change",
                "requestBody": {
                    "description": "User Change City",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangeCityInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address added to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserChangeCity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/{adminService}/dispute": {
            "get": {
                "tags": [
                    "Dispute List"
                ],
                "operationId": "api.v1.user.adminService.dispute",
                "parameters": [
                    {
                        "name": "adminService",
                        "in": "path",
                        "description": "admin service name. ride / services / order",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "services"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns user's Dispute list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/cusines/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.user.store.cusines",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/list/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.user.store.list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "qfilter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/details/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.user.store.list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "qfilter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "non-veg",
                                "pure-veg",
                                "discount"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/check/request": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.user.store.check",
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/show-addons/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.user.store.show.addons",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/useraddress": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.user.store.useraddress",
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/addcart": {
            "post": {
                "tags": [
                    "Order"
                ],
                "description": "Add to Cart",
                "operationId": "apiv1.user.store.addcart",
                "requestBody": {
                    "description": "Add to Cart",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddCartInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddCart"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/cartlist": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.user.store.cartlist",
                "parameters": [
                    {
                        "name": "promocode_id",
                        "in": "query",
                        "description": "Promocode ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "wallet",
                        "in": "query",
                        "description": "Wallet",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_address_id",
                        "in": "query",
                        "description": "User Address ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/checkout": {
            "post": {
                "tags": [
                    "Order"
                ],
                "description": "Checkout",
                "operationId": "apiv1.user.store.checkout",
                "requestBody": {
                    "description": "Checkout",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Checkout"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/order/cancel/request": {
            "post": {
                "tags": [
                    "Order"
                ],
                "description": "Add to Cart",
                "operationId": "apiv1.user.order.cancel.request",
                "requestBody": {
                    "description": "Add to Cart",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCancelOrderInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCancelOrder"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/store/order/rating": {
            "post": {
                "tags": [
                    "Order"
                ],
                "description": "Add to Cart",
                "operationId": "apiv1.user.store.order.rating",
                "requestBody": {
                    "description": "Add to Cart",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserOrderRatingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOrderRating"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/check/order/request": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.provider.order.check.request",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Provider Current Latitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Provider Current Longitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/cancel/order/request": {
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.provider.cancel.order.request",
                "requestBody": {
                    "description": "Create Dispute",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCancelOrderInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCancelOrder"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/update/order/request": {
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.provider.update.order.request",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOrderRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/rate/order": {
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "apiv1.provider.rate.order",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderOrderRatingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderOrderRating"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/trips-history/order?": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.user.trips.history.order",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "past / current / history . if past, 'CANCELLED','COMPLETED'. if history, 'SCHEDULED' else all current requests.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "past"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Transport Service list history of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/trips-history/order/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.user.trips.history.order.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular Service history detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history/order?": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.provider.history.order",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns order list history of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history/order/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.provider.history.order.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "order request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular order history detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/order/dispute": {
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.user.order.dispute",
                "requestBody": {
                    "description": "User Order Dispute",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserOrderDisputeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Saved Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOrderDispute"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history-dispute/order": {
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.provider.order.dispute",
                "requestBody": {
                    "description": "Provider Order Dispute",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderOrderDisputeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Saved Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderOrderDispute"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/order/disputestatus/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.user.order.disputestatus.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "order request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular order Dispute detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/order/disputestatus/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "api.v1.provider.order.disputestatus.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "order request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular order Dispute detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/countries": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.countries",
                "responses": {
                    "200": {
                        "description": "Country Details",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/total/storeorder": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.total.storeorder",
                "responses": {
                    "200": {
                        "description": "DASHBOARD DEATILS",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/cuisinelist/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.cuisinelist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns shops Cuisinelist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/shops/details/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.shops.list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "qfilter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "non-veg",
                                "pure-veg",
                                "discount"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Shop Details",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/shops/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.shops",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shop Details",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Shop Update",
                "operationId": "api.v1.shop.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SHOP ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update SHOP",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/updateshop"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SHOP Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/updateshop"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/categoryindex/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns All Category of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/categorylist/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.categorylist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Categories of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/category": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Store Category",
                "operationId": "api.v1.shop.category",
                "requestBody": {
                    "description": "Store Category",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/storecategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category Changed Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/storecategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/category/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns All Category of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Category Update",
                "operationId": "api.v1.shop.updatecategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Add On",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/updatecategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/updatecategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shop"
                ],
                "operationId": "api.v1.shop.deletecategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "category id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/category/{id}/updateStatus": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.updatecategoryStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Status Updated ",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/addon/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.addon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns All Addons of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/addonslist/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.addonslist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Addons of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/addon/{id}/updateStatus": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.updateStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addon Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status Updated ",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/addons": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Store Add On",
                "operationId": "api.v1.shop.addons",
                "requestBody": {
                    "description": "Store Add On",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/storeaddon"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Addon changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/storeaddon"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/addons/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.addons",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addon Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns All Addons of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Update Add On",
                "operationId": "api.v1.shop.updateaddons",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ADDONS ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Add On",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/updateaddon"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Addon Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/updateaddon"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shop"
                ],
                "operationId": "api.v1.shop.deleteaddons",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Add ons id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Addon deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/itemsindex/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.itemsindex",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns All Items of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/items/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Iems of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Update Items",
                "operationId": "api.v1.shop.updateitems",
                "requestBody": {
                    "description": "Update Items",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/updateitems"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Items Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/updateitems"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shop"
                ],
                "operationId": "api.v1.shop.deleteitems",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Items id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Items deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/items/{id}/updateStatus": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.updateitemsStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status Updated ",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/items": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Store Items",
                "operationId": "api.v1.shop.storeitems",
                "requestBody": {
                    "description": "Store Items",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/storeitems"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Items Add successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/storeitems"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/shopstiming": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.shopstiming",
                "responses": {
                    "200": {
                        "description": "All timings of Particular Store",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop"
                ],
                "description": "Update Items",
                "operationId": "api.v1.shop.updateshopstiming",
                "requestBody": {
                    "description": "Update Items",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/updateshopstiming"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Items Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/updateshopstiming"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/shoprequesthistory?": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "api.v1.shop.shoprequesthistory",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "ACCEPTED / COMPLETED / CANCELLED  / history . if ACCEPTED, 'Ongoing Requests'. if history, 'COMPLETED', All Past Completed \t\t *\t\t Orders.   if history, 'CANCELLED', All Past CANCELLED Orders ",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "COMPLETED"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns ",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/requesthistory/{id}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "apiv1.shop.requesthistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Order Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Store Order Details with Invoice",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/shop/dispatcher/orders?": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "operationId": "api.v1.shop.dispatcher/orders",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "ACCEPTED /ORDERED/ Dispacther . if ORDERED, 'Incoming  Requests'. if  'ACCEPTED', All Ongoing Orders",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ORDERED"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns All Icoming and Accepted Orders",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Shop": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service_category": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.service_category",
                "responses": {
                    "200": {
                        "description": "Returns Service Main Categories",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service_sub_category/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.service_sub_category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/review/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.review.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns provider reviews",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/services/{id}/{ids}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.services",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Sub Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/list": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.store.cusines",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Latitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "long",
                        "in": "query",
                        "description": "Longitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Provider Name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/send/request": {
            "post": {
                "tags": [
                    "Service"
                ],
                "description": "Add to Cart",
                "operationId": "apiv1.user.service.send.request",
                "requestBody": {
                    "description": "Add to Cart",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServiceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateService"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/check/request": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.service.check",
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/request/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.service.request.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "service request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/cancel/request": {
            "post": {
                "tags": [
                    "Service"
                ],
                "description": "Cancel Service",
                "operationId": "apiv1.user.service.cancel.request",
                "requestBody": {
                    "description": "Cancel Service",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCancelServiceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns settings for the application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCancelService"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/update/payment": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.service.update.payment",
                "requestBody": {
                    "description": "Update Payment Method",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceUpdatePaymentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUpdatePayment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/payment": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.service.payment",
                "requestBody": {
                    "description": "User Payment",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserServicePaymentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserServicePayment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/rate": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.user.service.rate",
                "requestBody": {
                    "description": "User Rating",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserServiceRatingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserServiceRating"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/check/serve/request": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.provider.serve.check.request",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Provider Current Latitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Provider Current Longitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/cancel/serve/request": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.provider.cancel.serve.request",
                "requestBody": {
                    "description": "Cancel Ride",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCancelServiceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCancelService"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/update/serve/request": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.provider.update.serve.request",
                "requestBody": {
                    "description": "Update Status",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateServiceRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateServiceRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/rate/serve": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "apiv1.provider.rate.serve",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderServiceRatingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderServiceRating"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/trips-history/service?": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.user.trips.history.service",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "past / current / history . if past, 'CANCELLED','COMPLETED'. if history, 'SCHEDULED' else all current requests.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "past"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Transport Service list history of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/trips-history/service/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.user.trips.history.service.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular Service history detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history/service?": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.provider.history.service",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Service ride list history of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history/service/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.provider.history.service.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular Service history detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/dispute": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.user.service.dispute",
                "requestBody": {
                    "description": "User Service Dispute",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserServiceDisputeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Saved Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserServiceDispute"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history-dispute/service": {
            "post": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.provider.service.dispute",
                "requestBody": {
                    "description": "Provider Service Dispute",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderServiceDisputeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Saved Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderServiceDispute"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/service/disputestatus/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.user.services.disputestatus.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "service request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular service Dispute status detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/service/disputestatus/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "operationId": "api.v1.provider.services.disputestatus.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "service request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular service Dispute detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/services": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.services",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Ride Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Current latitude of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Current longitude of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/estimate": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.estimate",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransportEstimateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransportEstimate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/send/request": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.send.request",
                "requestBody": {
                    "description": "Create Request",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransportCreateRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransportCreateRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/check/request": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.check.request",
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/request/{id}": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.request.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ride request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/cancel/request": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.cancel.request",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTransportCancelRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTransportCancelRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/payment": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.payment",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTransportPaymentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTransportPayment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/update/payment": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.update.payment",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransportUpdatePaymentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransportUpdatePayment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/rate": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.rate",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTransportRatingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTransportRating"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/transport/extend/trip": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.user.transport.extend",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransportExtendInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransportExtend"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/check/ride/request": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.provider.transport.check.request",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Provider Current Latitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13.0389694"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Provider Current Longitude",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "80.2095246"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/cancel/ride/request": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.provider.cancel.ride.request",
                "requestBody": {
                    "description": "Cancel Ride",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCancelRideInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCancelRide"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/update/ride/request": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.provider.update.ride.request",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRideRequestInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRideRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/waiting": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.provider.waiting",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderWaitingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderWaiting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/transport/payment": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.provider.transport.payment",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderPaymentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderPayment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/rate/ride": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "apiv1.provider.rate.ride",
                "requestBody": {
                    "description": "User Login",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderTransportRatingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns available services, providers and promocodes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderTransportRating"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/trips-history/transport?": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.user.trips.history.transport",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "past / current / history . if past, 'CANCELLED','COMPLETED'. if history, 'SCHEDULED' else all current requests.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "past"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Transport ride list history of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/trips-history/transport/{id}": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.user.trips.history.transport.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ride request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular ride history detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history/transport?": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.provider.history.transport",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Transport ride list history of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history/transport/{id}": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.provider.history.transport.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ride request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular ride history detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/ride/dispute": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.user.ride.dispute",
                "requestBody": {
                    "description": "User Ride Dispute",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserTransportDisputeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Saved Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTransportDispute"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/history-dispute/transport": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.provider.ride.dispute",
                "requestBody": {
                    "description": "Provider Ride Dispute",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderTransportDisputeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Saved Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderTransportDispute"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/user/ride/disputestatus/{id}": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.user.ride.disputestatus.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transport request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular transport Dispute status detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/gridetech_api/api/v1/provider/ride/disputestatus/{id}": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "operationId": "api.v1.provider.ride.disputestatus.id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transport request id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns particular transport Dispute detail",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable entity. When required parameters were not supplied."
                    }
                },
                "security": [
                    {
                        "Provider": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Base": {
                "properties": {
                    "statusCode": {
                        "type": "string",
                        "example": "200"
                    },
                    "title": {
                        "type": "string",
                        "example": "OK"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "responseData": {
                        "properties": {
                            "base_url": {
                                "type": "string",
                                "example": "http://127.0.0.1:8001/api/v1"
                            },
                            "services": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "admin_service": {
                                            "type": "string",
                                            "example": "TRANSPORT"
                                        },
                                        "display_name": {
                                            "type": "string",
                                            "example": "TRANSPORT"
                                        },
                                        "base_url": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8001/api/v1"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "appsetting": {
                                "type": "object",
                                "example": "http://127.0.0.1:8001/api/v1"
                            },
                            "error": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Oops! Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserLogin": {
                "properties": {
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9952199521"
                    },
                    "email": {
                        "type": "string",
                        "example": "demo@demo.com"
                    },
                    "device_type": {
                        "type": "string",
                        "enum": [
                            "ANDROID",
                            "IOS",
                            "MANUAL"
                        ]
                    },
                    "device_token": {
                        "type": "string"
                    },
                    "login_by": {
                        "type": "string",
                        "enum": [
                            "FACEBOOK",
                            "GOOGLE",
                            "MANUAL"
                        ],
                        "example": "MANUAL"
                    },
                    "password": {
                        "type": "string",
                        "example": "1234567"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserLoginInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "password": {
                                "type": "string"
                            },
                            "device_type": {
                                "type": "string"
                            },
                            "device_token": {
                                "type": "string"
                            },
                            "login_by": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserLogin"
                    }
                ]
            },
            "UserSignup": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "User"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Demo"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@demo.com"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "OTHER"
                        ],
                        "example": "MALE"
                    },
                    "device_type": {
                        "type": "string",
                        "enum": [
                            "ANDROID",
                            "IOS",
                            "MANUAL"
                        ]
                    },
                    "device_token": {
                        "type": "string"
                    },
                    "login_by": {
                        "type": "string",
                        "enum": [
                            "FACEBOOK",
                            "GOOGLE",
                            "MANUAL"
                        ],
                        "example": "MANUAL"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "country_id": {
                        "type": "string",
                        "example": "231"
                    },
                    "city_id": {
                        "type": "string",
                        "example": "48294"
                    },
                    "picture": {
                        "type": "string",
                        "format": "binary",
                        "example": ""
                    },
                    "social_unique_id": {
                        "type": "string",
                        "example": ""
                    },
                    "referral_code": {
                        "type": "string",
                        "example": ""
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserSignupInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "string"
                            },
                            "device_type": {
                                "type": "string"
                            },
                            "device_token": {
                                "type": "string"
                            },
                            "login_by": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "country_id": {
                                "type": "integer"
                            },
                            "city_id": {
                                "type": "integer"
                            },
                            "picture": {
                                "type": "string"
                            },
                            "social_unique_id": {
                                "type": "string"
                            },
                            "referral_code": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserSignup"
                    }
                ]
            },
            "UserSocialLogin": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "User"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Demo"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@demo.com"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "OTHER"
                        ],
                        "example": "MALE"
                    },
                    "device_type": {
                        "type": "string",
                        "example": ""
                    },
                    "device_token": {
                        "type": "string",
                        "example": ""
                    },
                    "login_by": {
                        "type": "string",
                        "enum": [
                            "ANDROID",
                            "IOS",
                            "MANUAL"
                        ],
                        "example": "MANUAL"
                    },
                    "country_id": {
                        "type": "string",
                        "example": "231"
                    },
                    "city_id": {
                        "type": "string",
                        "example": "48294"
                    },
                    "picture": {
                        "type": "string",
                        "format": "binary",
                        "example": ""
                    },
                    "social_unique_id": {
                        "type": "string",
                        "example": ""
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserSocialLoginInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "string"
                            },
                            "device_type": {
                                "type": "string"
                            },
                            "device_token": {
                                "type": "string"
                            },
                            "login_by": {
                                "type": "string"
                            },
                            "country_id": {
                                "type": "integer"
                            },
                            "city_id": {
                                "type": "integer"
                            },
                            "picture": {
                                "type": "string"
                            },
                            "social_unique_id": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserSocialLogin"
                    }
                ]
            },
            "UserForgot": {
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "user@demo.com"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "account_type": {
                        "type": "string",
                        "enum": [
                            "mobile",
                            "email"
                        ],
                        "example": "mobile"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserForgotInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "account_type": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserForgot"
                    }
                ]
            },
            "UserReset": {
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "otp": {
                        "type": "string",
                        "example": ""
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "123456"
                    },
                    "account_type": {
                        "type": "string",
                        "enum": [
                            "mobile",
                            "email"
                        ],
                        "example": "mobile"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserResetInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "username": {
                                "description": "if account_type is mobile, username is mobile number. If account_type is email, username is email id.",
                                "type": "string"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "otp": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "password_confirmation": {
                                "type": "string"
                            },
                            "account_type": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserReset"
                    }
                ]
            },
            "UserVerify": {
                "properties": {
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@demo.com"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserVerifyInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "country_code": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserVerify"
                    }
                ]
            },
            "UserRefresh": {
                "properties": {
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserRefreshInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "Authorization": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserRefresh"
                    }
                ]
            },
            "ProviderLogin": {
                "properties": {
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "provider@demo.com"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "OTHER"
                        ],
                        "example": "MALE"
                    },
                    "device_type": {
                        "type": "string",
                        "enum": [
                            "ANDROID",
                            "IOS",
                            "MANUAL"
                        ]
                    },
                    "device_token": {
                        "type": "string"
                    },
                    "login_by": {
                        "type": "string",
                        "enum": [
                            "FACEBOOK",
                            "GOOGLE",
                            "MANUAL"
                        ],
                        "example": "MANUAL"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "ProviderLoginInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "password": {
                                "type": "string"
                            },
                            "device_type": {
                                "type": "string"
                            },
                            "device_token": {
                                "type": "string"
                            },
                            "login_by": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderLogin"
                    }
                ]
            },
            "ProviderSignup": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "User"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Demo"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "provider@demo.com"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "OTHER"
                        ],
                        "example": "MALE"
                    },
                    "device_type": {
                        "type": "string",
                        "enum": [
                            "ANDROID",
                            "IOS",
                            "MANUAL"
                        ]
                    },
                    "device_token": {
                        "type": "string"
                    },
                    "login_by": {
                        "type": "string",
                        "enum": [
                            "FACEBOOK",
                            "GOOGLE",
                            "MANUAL"
                        ],
                        "example": "MANUAL"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "country_id": {
                        "type": "string",
                        "example": "231"
                    },
                    "city_id": {
                        "type": "string",
                        "example": "48294"
                    },
                    "picture": {
                        "type": "string",
                        "format": "binary",
                        "example": ""
                    },
                    "social_unique_id": {
                        "type": "string",
                        "example": ""
                    },
                    "referral_code": {
                        "type": "string",
                        "example": ""
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "ProviderSignupInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "string"
                            },
                            "device_type": {
                                "type": "string"
                            },
                            "device_token": {
                                "type": "string"
                            },
                            "login_by": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "country_id": {
                                "type": "integer"
                            },
                            "city_id": {
                                "type": "integer"
                            },
                            "picture": {
                                "type": "string"
                            },
                            "social_unique_id": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderSignup"
                    }
                ]
            },
            "ProviderForgot": {
                "properties": {
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "provider@demo.com"
                    },
                    "account_type": {
                        "type": "string",
                        "enum": [
                            "mobile",
                            "email"
                        ],
                        "example": "mobile"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "ProviderForgotInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "account_type": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderForgot"
                    }
                ]
            },
            "ProviderReset": {
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "User"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "91"
                    },
                    "email": {
                        "type": "string",
                        "example": "provider@demo.com"
                    },
                    "otp": {
                        "type": "string"
                    },
                    "device_type": {
                        "type": "string",
                        "example": ""
                    },
                    "device_token": {
                        "type": "string",
                        "example": ""
                    },
                    "login_by": {
                        "type": "string",
                        "enum": [
                            "ANDROID",
                            "IOS",
                            "MANUAL"
                        ],
                        "example": "MANUAL"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "123456"
                    },
                    "account_type": {
                        "type": "string",
                        "enum": [
                            "mobile",
                            "email"
                        ],
                        "example": "mobile"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "ProviderResetInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "username": {
                                "description": "if account_type is mobile, username is mobile number. If account_type is email, username is email id.",
                                "type": "string"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "otp": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "password_confirmation": {
                                "type": "string"
                            },
                            "account_type": {
                                "description": "mobile / email. If mobile, send country_code also",
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderReset"
                    }
                ]
            },
            "AcceptRequest": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "TRANSPORT"
                    }
                },
                "type": "object"
            },
            "AcceptRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Request ID",
                                "type": "string"
                            },
                            "admin_service": {
                                "description": "Admin Service",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/AcceptRequest"
                    }
                ]
            },
            "CancelRequest": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "TRANSPORT"
                    }
                },
                "type": "object"
            },
            "CancelRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Request ID",
                                "type": "string"
                            },
                            "admin_service": {
                                "description": "Admin Service",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CancelRequest"
                    }
                ]
            },
            "UserAddChat": {
                "required": [
                    "id",
                    "user_id",
                    "provider_id",
                    "map_address"
                ],
                "properties": {
                    "id": {
                        "description": "Request Id",
                        "type": "integer",
                        "example": "1"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "example": "user"
                    },
                    "user_name": {
                        "type": "string",
                        "example": "Hema"
                    },
                    "provider_name": {
                        "type": "string",
                        "example": "Malini"
                    },
                    "message": {
                        "type": "string",
                        "example": "Hi, can you update when will you reach?"
                    }
                },
                "type": "object"
            },
            "UserAddChatInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "admin_service": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "user_name": {
                                "type": "string"
                            },
                            "provider_name": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserAddChat"
                    }
                ]
            },
            "ShopLogin": {
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "kfc@demo.com"
                    },
                    "device_type": {
                        "type": "string",
                        "enum": [
                            "ANDROID",
                            "IOS",
                            "MANUAL"
                        ]
                    },
                    "device_token": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "ShopLoginInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "device_type": {
                                "type": "string"
                            },
                            "device_token": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ShopLogin"
                    }
                ]
            },
            "ProviderSendOTP": {
                "required": [
                    "country_code",
                    "mobile",
                    "salt_key"
                ],
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "ProviderSendOTPInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "country_code": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderSendOTP"
                    }
                ]
            },
            "ProviderVerifyOTP": {
                "required": [
                    "country_code",
                    "mobile",
                    "otp",
                    "salt_key"
                ],
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "otp": {
                        "type": "string"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "ProviderVerifyOTPInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "country_code": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "otp": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderVerifyOTP"
                    }
                ]
            },
            "ProviderProfileUpdate": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "Provider"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Demo"
                    },
                    "mobile": {
                        "type": "integer",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "provider@demo.com"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "ar"
                        ]
                    },
                    "country_id": {
                        "type": "string",
                        "example": "231"
                    },
                    "city_id": {
                        "type": "string",
                        "example": "48294"
                    },
                    "picture": {
                        "type": "string",
                        "format": "binary",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "ProviderProfileUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "country_id": {
                                "type": "integer"
                            },
                            "city_id": {
                                "type": "integer"
                            },
                            "picture": {
                                "type": "string"
                            },
                            "language": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderProfileUpdate"
                    }
                ]
            },
            "ProviderPasswordUpdate": {
                "required": [
                    "old_password",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "old_password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "1234567"
                    }
                },
                "type": "object"
            },
            "ProviderPasswordUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "old_password": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "password_confirmation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderPasswordUpdate"
                    }
                ]
            },
            "ProviderLanguageUpdate": {
                "required": [
                    "language"
                ],
                "properties": {
                    "language": {
                        "type": "string",
                        "example": "en"
                    }
                },
                "type": "object"
            },
            "ProviderLanguageUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "language": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderLanguageUpdate"
                    }
                ]
            },
            "ProviderDeviceToken": {
                "properties": {
                    "device_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderDeviceTokenInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "device_token": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderDeviceToken"
                    }
                ]
            },
            "ProviderCardUpdate": {
                "required": [
                    "stripe_token"
                ],
                "properties": {
                    "stripe_token": {
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "ProviderCardUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "stripe_token": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderCardUpdate"
                    }
                ]
            },
            "ProviderAddMoney": {
                "required": [
                    "amount",
                    "card_id",
                    "user_type"
                ],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "card_id": {
                        "description": "selected card id",
                        "type": "integer",
                        "example": "1"
                    },
                    "payment_mode": {
                        "type": "string",
                        "example": "card"
                    },
                    "user_type": {
                        "type": "string",
                        "example": "provider"
                    }
                },
                "type": "object"
            },
            "ProviderAddMoneyInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "amount": {
                                "type": "integer"
                            },
                            "card_id": {
                                "type": "integer"
                            },
                            "payment_mode": {
                                "type": "string"
                            },
                            "user_type": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderAddMoney"
                    }
                ]
            },
            "ProviderWalletMoney": {
                "required": [
                    "amount",
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "sender Id",
                        "type": "varchar",
                        "example": "1"
                    },
                    "mobile": {
                        "description": "Mobile Number",
                        "type": "integer",
                        "example": "9874563210"
                    },
                    "amount": {
                        "type": "integer",
                        "example": "100"
                    }
                },
                "type": "object"
            },
            "ProviderWalletMoneyInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "varchar"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "amount": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderWalletMoney"
                    }
                ]
            },
            "ProviderAddBankDetails": {
                "required": [
                    "bankform_id",
                    "keyvalue"
                ],
                "properties": {
                    "bankform_id[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "keyvalue[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "ProviderAddBankDetailsInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "bankform_id[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "1"
                            },
                            "keyvalue[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "2323232"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderAddBankDetails"
                    }
                ]
            },
            "ProviderEditBankDetails": {
                "required": [
                    "bankform_id",
                    "keyvalue"
                ],
                "properties": {
                    "bankform_id[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "keyvalue[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "id[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "ProviderEditBankDetailsInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "bankform_id[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "1"
                            },
                            "keyvalue[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "1"
                            },
                            "id[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "2323232"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderEditBankDetails"
                    }
                ]
            },
            "ProviderDocumentsList": {
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "Transport"
                    }
                },
                "type": "object"
            },
            "ProviderDocumentsListInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "type": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderDocumentsList"
                    }
                ]
            },
            "ProviderDocuments": {
                "required": [
                    "type"
                ],
                "properties": {
                    "expires_at": {
                        "type": "date",
                        "example": "2020-12-12"
                    },
                    "document_id": {
                        "type": "string",
                        "example": "509"
                    },
                    "file": {
                        "type": "file"
                    }
                },
                "type": "object"
            },
            "ProviderDocumentsInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "expires_at": {
                                "type": "date"
                            },
                            "document_id": {
                                "type": "string"
                            },
                            "file": {
                                "type": "file"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderDocuments"
                    }
                ]
            },
            "ProviderVehicle": {
                "required": [
                    "vehicle_id",
                    "vehicle_year",
                    "vehicle_make",
                    "vehicle_model",
                    "vehicle_no",
                    "admin_service",
                    "category_id"
                ],
                "properties": {
                    "vehicle_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "vehicle_year": {
                        "type": "integer",
                        "example": "2017"
                    },
                    "vehicle_make": {
                        "type": "string",
                        "example": "Swift"
                    },
                    "vehicle_model": {
                        "type": "integer",
                        "example": "Dzire"
                    },
                    "vehicle_no": {
                        "type": "string",
                        "example": "TN 11 AA 0001"
                    },
                    "vehicle_color": {
                        "type": "string",
                        "example": "red"
                    },
                    "admin_service": {
                        "type": "string",
                        "example": "TRANSPORT"
                    },
                    "picture": {
                        "description": "Please Upload RC",
                        "type": "file"
                    },
                    "picture1": {
                        "description": "Please Upload Insurance",
                        "type": "file"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "ProviderVehicleInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "vehicle_id": {
                                "type": "integer"
                            },
                            "vehicle_year": {
                                "type": "string"
                            },
                            "vehicle_make": {
                                "type": "string"
                            },
                            "vehicle_model": {
                                "type": "string"
                            },
                            "vehicle_no": {
                                "type": "string"
                            },
                            "vehicle_color": {
                                "type": "string"
                            },
                            "admin_service": {
                                "type": "string"
                            },
                            "picture": {
                                "type": "file"
                            },
                            "picture1": {
                                "type": "file"
                            },
                            "category_id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderVehicle"
                    }
                ]
            },
            "ProviderEditVehicle": {
                "required": [
                    "id",
                    "vehicle_id",
                    "vehicle_year",
                    "vehicle_make",
                    "vehicle_model",
                    "vehicle_no",
                    "admin_service",
                    "category_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "2"
                    },
                    "vehicle_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "vehicle_year": {
                        "type": "integer",
                        "example": "2017"
                    },
                    "vehicle_make": {
                        "type": "string",
                        "example": "Swift"
                    },
                    "vehicle_model": {
                        "type": "integer",
                        "example": "Dzire"
                    },
                    "vehicle_no": {
                        "type": "string",
                        "example": "TN 11 AA 0001"
                    },
                    "vehicle_color": {
                        "type": "string",
                        "example": "red"
                    },
                    "admin_service": {
                        "type": "string",
                        "example": "TRANSPORT"
                    },
                    "picture": {
                        "description": "Please Upload RC",
                        "type": "file"
                    },
                    "picture1": {
                        "description": "Please Upload Insurance",
                        "type": "file"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "ProviderEditVehicleInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "vehicle_id": {
                                "type": "integer"
                            },
                            "vehicle_year": {
                                "type": "integer"
                            },
                            "vehicle_make": {
                                "type": "string"
                            },
                            "vehicle_model": {
                                "type": "integer"
                            },
                            "vehicle_no": {
                                "type": "string"
                            },
                            "vehicle_color": {
                                "type": "string"
                            },
                            "admin_service": {
                                "type": "string"
                            },
                            "picture": {
                                "type": "file"
                            },
                            "picture1": {
                                "type": "file"
                            },
                            "category_id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderEditVehicle"
                    }
                ]
            },
            "ProviderClearRequest": {
                "required": [
                    "provider_id"
                ],
                "properties": {
                    "provider_id": {
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "ProviderClearRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "provider_id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderClearRequest"
                    }
                ]
            },
            "UserSendOTP": {
                "required": [
                    "country_code",
                    "mobile",
                    "salt_key"
                ],
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserSendOTPInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "country_code": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserSendOTP"
                    }
                ]
            },
            "UserVerifyOTP": {
                "required": [
                    "country_code",
                    "mobile",
                    "otp",
                    "salt_key"
                ],
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "otp": {
                        "type": "string"
                    },
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserVerifyOTPInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "country_code": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "otp": {
                                "type": "string"
                            },
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserVerifyOTP"
                    }
                ]
            },
            "UserProfileUpdate": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "User"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Demo"
                    },
                    "mobile": {
                        "type": "integer",
                        "example": "9944332211"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@demo.com"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "ar"
                        ]
                    },
                    "country_id": {
                        "type": "string",
                        "example": "231"
                    },
                    "city_id": {
                        "type": "string",
                        "example": "48294"
                    },
                    "picture": {
                        "type": "string",
                        "format": "binary",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UserProfileUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "country_id": {
                                "type": "integer"
                            },
                            "city_id": {
                                "type": "integer"
                            },
                            "picture": {
                                "type": "string"
                            },
                            "language": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserProfileUpdate"
                    }
                ]
            },
            "UserPasswordUpdate": {
                "required": [
                    "old_password",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "old_password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "1234567"
                    }
                },
                "type": "object"
            },
            "UserPasswordUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "old_password": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "password_confirmation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserPasswordUpdate"
                    }
                ]
            },
            "UserLanguageUpdate": {
                "required": [
                    "language"
                ],
                "properties": {
                    "language": {
                        "type": "string",
                        "example": "en"
                    }
                },
                "type": "object"
            },
            "UserLanguageUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "language": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserLanguageUpdate"
                    }
                ]
            },
            "UserCountries": {
                "properties": {
                    "salt_key": {
                        "type": "string",
                        "example": "MQ=="
                    }
                },
                "type": "object"
            },
            "UserCountriesInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "salt_key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserCountries"
                    }
                ]
            },
            "UserDeviceToken": {
                "properties": {
                    "device_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserDeviceTokenInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "device_token": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserDeviceToken"
                    }
                ]
            },
            "UserCardUpdate": {
                "required": [
                    "stripe_token"
                ],
                "properties": {
                    "stripe_token": {
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UsercardUpdateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "stripe_token": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserCardUpdate"
                    }
                ]
            },
            "UserAddMoney": {
                "required": [
                    "amount",
                    "card_id",
                    "user_type"
                ],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "card_id": {
                        "description": "selected card id",
                        "type": "integer",
                        "example": "1"
                    },
                    "payment_mode": {
                        "type": "string",
                        "example": "card"
                    },
                    "user_type": {
                        "type": "string",
                        "example": "user"
                    }
                },
                "type": "object"
            },
            "UserAddMoneyInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "amount": {
                                "type": "integer"
                            },
                            "card_id": {
                                "type": "integer"
                            },
                            "payment_mode": {
                                "type": "string"
                            },
                            "user_type": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserAddMoney"
                    }
                ]
            },
            "UserWalletMoney": {
                "required": [
                    "amount",
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "sender Id",
                        "type": "varchar",
                        "example": "1"
                    },
                    "mobile": {
                        "description": "Mobile Number",
                        "type": "integer",
                        "example": "9874563210"
                    },
                    "amount": {
                        "type": "integer",
                        "example": "100"
                    }
                },
                "type": "object"
            },
            "UserWalletMoneyInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "varchar"
                            },
                            "mobile": {
                                "type": "integer"
                            },
                            "amount": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserWalletMoney"
                    }
                ]
            },
            "UserAddAddress": {
                "required": [
                    "address_type",
                    "latitude",
                    "longitude",
                    "map_address"
                ],
                "properties": {
                    "address_type": {
                        "type": "string",
                        "example": "Other"
                    },
                    "landmark": {
                        "type": "string",
                        "example": "Prestige Palladium"
                    },
                    "flat_no": {
                        "type": "string",
                        "example": "1"
                    },
                    "street": {
                        "type": "string",
                        "example": "Anna salai"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "9.123"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "9.123"
                    },
                    "map_address": {
                        "type": "string",
                        "example": "Prestige, Anna salai, chennai"
                    },
                    "title": {
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UserAddAddressInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "address_type": {
                                "type": "string"
                            },
                            "landmark": {
                                "type": "string"
                            },
                            "flat_no": {
                                "type": "string"
                            },
                            "street": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "string"
                            },
                            "longitude": {
                                "type": "string"
                            },
                            "map_address": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserAddAddress"
                    }
                ]
            },
            "UserUpdateAddress": {
                "required": [
                    "id",
                    "address_type",
                    "latitude",
                    "longitude",
                    "map_address"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "4"
                    },
                    "address_type": {
                        "type": "string",
                        "example": "Other"
                    },
                    "landmark": {
                        "type": "string",
                        "example": "Prestige Square"
                    },
                    "flat_no": {
                        "type": "string",
                        "example": "1"
                    },
                    "street": {
                        "type": "string",
                        "example": "Anna salai"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "9.123"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "9.123"
                    },
                    "map_address": {
                        "type": "string",
                        "example": "Prestige, Anna salai, chennai"
                    },
                    "_method": {
                        "type": "string",
                        "example": "PATCH"
                    }
                },
                "type": "object"
            },
            "UserUpdateAddressInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": "4"
                            },
                            "address_type": {
                                "type": "string"
                            },
                            "landmark": {
                                "type": "string"
                            },
                            "flat_no": {
                                "type": "string"
                            },
                            "street": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "string"
                            },
                            "longitude": {
                                "type": "string"
                            },
                            "map_address": {
                                "type": "string"
                            },
                            "_method": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserUpdateAddress"
                    }
                ]
            },
            "UserChangeCity": {
                "required": [
                    "city_id"
                ],
                "properties": {
                    "city_id": {
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "UserChangeCityInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "city_id": {
                                "type": "integer",
                                "example": "18422"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserChangeCity"
                    }
                ]
            },
            "AddCart": {
                "required": [
                    "item_id",
                    "qty",
                    "repeat",
                    "customize"
                ],
                "properties": {
                    "item_id": {
                        "type": "string"
                    },
                    "cart_id": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "string"
                    },
                    "addons": {
                        "type": "string"
                    },
                    "repeat": {
                        "type": "boolean"
                    },
                    "customize": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AddCartInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "item_id": {
                                "description": "if account_type is mobile, username is mobile number. If account_type is email, username is email id.",
                                "type": "integer"
                            },
                            "cart_id": {
                                "type": "integer"
                            },
                            "qty": {
                                "description": "Send cart id if item already exists and add or minus quantity",
                                "type": "float"
                            },
                            "addons": {
                                "type": "string"
                            },
                            "action": {
                                "description": "whenever add or edit addons give action as *addnew* ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/AddCart"
                    }
                ]
            },
            "Checkout": {
                "required": [
                    "payment_mode",
                    "user_address_id"
                ],
                "properties": {
                    "promocode_id": {
                        "type": "integer"
                    },
                    "wallet": {
                        "type": "string"
                    },
                    "payment_mode": {
                        "type": "string",
                        "enum": [
                            "CASH",
                            "CARD"
                        ],
                        "example": "CASH"
                    },
                    "user_address_id": {
                        "type": "integer"
                    },
                    "delivery_date": {
                        "type": "string"
                    },
                    "order_type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CheckoutInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "promocode_id": {
                                "type": "integer"
                            },
                            "wallet": {
                                "type": "string"
                            },
                            "payment_mode": {
                                "type": "string"
                            },
                            "user_address_id": {
                                "type": "string"
                            },
                            "delivery_date": {
                                "type": "string"
                            },
                            "order_type": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Checkout"
                    }
                ]
            },
            "UserCancelOrder": {
                "required": [
                    "id",
                    "cancel_reason"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cancel_reason": {
                        "type": "string"
                    },
                    "cancel_reason_opt": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserCancelOrderInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "order request id",
                                "type": "integer"
                            },
                            "cancel_reason": {
                                "description": "reasons list select dropdown value",
                                "type": "string"
                            },
                            "cancel_reason_opt": {
                                "description": "optional. when choosing 'others' in cancel_reason this box will appear",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserCancelOrder"
                    }
                ]
            },
            "UserOrderRating": {
                "required": [
                    "request_id",
                    "shopid",
                    "rating",
                    "shoprating"
                ],
                "properties": {
                    "request_id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "integer"
                    },
                    "shopid": {
                        "type": "integer"
                    },
                    "shoprating": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserOrderRatingInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "request_id": {
                                "description": "order request id",
                                "type": "integer"
                            },
                            "rating": {
                                "description": "delivery boy rating",
                                "type": "string"
                            },
                            "shoprating": {
                                "description": "shop rating",
                                "type": "string"
                            },
                            "shopid": {
                                "description": "shop Id",
                                "type": "integer"
                            },
                            "comment": {
                                "description": "shop rating",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserOrderRating"
                    }
                ]
            },
            "ProviderCancelOrder": {
                "required": [
                    "id",
                    "reason"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderCancelOrderInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "reason": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderCancelOrder"
                    }
                ]
            },
            "UpdateOrderRequest": {
                "required": [
                    "_method",
                    "id",
                    "status"
                ],
                "properties": {
                    "_method": {
                        "type": "string",
                        "default": "PATCH"
                    },
                    "id": {
                        "type": "string",
                        "example": ""
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ORDERED",
                            "RECEIVED",
                            "CANCELLED",
                            "ASSIGNED",
                            "PROCESSING",
                            "REACHED",
                            "PICKEDUP",
                            "ARRIVED",
                            "DELIVERED",
                            "COMPLETED",
                            "SEARCHING",
                            "STORECANCELLED"
                        ],
                        "example": "STARTED"
                    },
                    "otp": {
                        "description": "During DELIVERED",
                        "type": "string",
                        "example": ""
                    },
                    "d_latitude": {
                        "description": "During DROPPED - User Completes Ride Before Destination",
                        "type": "string",
                        "example": ""
                    },
                    "d_longitude": {
                        "description": "During DROPPED - User Completes Ride Before Destination",
                        "type": "string",
                        "example": ""
                    },
                    "d_address": {
                        "description": "During DROPPED - User Completes Ride Before Destination",
                        "type": "string",
                        "example": ""
                    },
                    "latitude": {
                        "description": "During DROPPED with Location Points",
                        "type": "string",
                        "example": ""
                    },
                    "longitude": {
                        "description": "During DROPPED with Location Points",
                        "type": "string",
                        "example": ""
                    },
                    "distance": {
                        "description": "During DROPPED with Location Points",
                        "type": "string",
                        "example": ""
                    },
                    "toll_price": {
                        "description": "During DROPPED",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateOrderRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "_method": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "otp": {
                                "type": "string"
                            },
                            "d_latitude": {
                                "type": "string"
                            },
                            "d_longitude": {
                                "type": "string"
                            },
                            "d_address": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "string"
                            },
                            "longitude": {
                                "type": "string"
                            },
                            "distance": {
                                "type": "string"
                            },
                            "toll_price": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateOrderRequest"
                    }
                ]
            },
            "ProviderOrderRating": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "string",
                        "example": "5"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Test"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "ORDER"
                    }
                },
                "type": "object"
            },
            "ProviderOrderRatingInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "rating",
                            "admin_service"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "integer"
                            },
                            "comment": {
                                "type": "string"
                            },
                            "admin_service": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderOrderRating"
                    }
                ]
            },
            "UserOrderDispute": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_type": {
                        "type": "string",
                        "example": "user"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "provider_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_name": {
                        "type": "string",
                        "example": "Not Interested"
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "comments": {
                        "type": "string",
                        "example": "No Response"
                    }
                },
                "type": "object"
            },
            "UserOrderDisputeInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "dispute_type",
                            "user_id",
                            "provider_id",
                            "dispute_name",
                            "store_id"
                        ],
                        "properties": {
                            "id": {
                                "description": "Store Order id",
                                "type": "integer"
                            },
                            "dispute_type": {
                                "type": "string"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "store_id": {
                                "type": "integer"
                            },
                            "provider_id": {
                                "type": "integer"
                            },
                            "dispute_name": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserOrderDispute"
                    }
                ]
            },
            "ProviderOrderDispute": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_type": {
                        "type": "string",
                        "example": "provider"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "provider_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_name": {
                        "type": "string",
                        "example": "Not Interested"
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "comments": {
                        "type": "string",
                        "example": "No Response"
                    }
                },
                "type": "object"
            },
            "ProviderOrderDisputeInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "dispute_type",
                            "user_id",
                            "provider_id",
                            "dispute_name"
                        ],
                        "properties": {
                            "id": {
                                "description": "Store Order id",
                                "type": "integer"
                            },
                            "dispute_type": {
                                "type": "string"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "provider_id": {
                                "type": "integer"
                            },
                            "dispute_name": {
                                "type": "string"
                            },
                            "store_id": {
                                "type": "integer"
                            },
                            "comments": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderOrderDispute"
                    }
                ]
            },
            "updateshop": {
                "required": [
                    "store_name",
                    "store_type_id",
                    "email",
                    "contact_number",
                    "store_location",
                    "latitude",
                    "longitude",
                    "store_zipcode",
                    "zone_id"
                ],
                "properties": {
                    "store_name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "is_veg": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "estimated_delivery_time": {
                        "type": "integer"
                    },
                    "contact_number": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "store_location": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "store_zipcode": {
                        "type": "string"
                    },
                    "contact_person": {
                        "type": "string"
                    },
                    "store_packing_charges": {
                        "type": "float"
                    },
                    "zone_id": {
                        "type": "integer"
                    },
                    "store_gst": {
                        "type": "integer"
                    },
                    "offer_min_amount": {
                        "type": "float"
                    },
                    "offer_percent": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "text"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "city_id": {
                        "type": "integer"
                    },
                    "commission": {
                        "type": "float"
                    },
                    "country_code": {
                        "type": "integer"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "cuisine_id[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    "_method": {
                        "type": "string",
                        "example": "PATCH"
                    }
                },
                "type": "object"
            },
            "updateshopInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "store_name": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "is_veg": {
                                "type": "integer"
                            },
                            "email": {
                                "type": "string"
                            },
                            "estimated_delivery_time": {
                                "type": "integer"
                            },
                            "contact_number": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "store_location": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "string"
                            },
                            "longitude": {
                                "type": "string"
                            },
                            "store_zipcode": {
                                "type": "string"
                            },
                            "contact_person": {
                                "type": "string"
                            },
                            "store_packing_charges": {
                                "type": "float"
                            },
                            "zone_id": {
                                "type": "integer"
                            },
                            "store_gst": {
                                "type": "integer"
                            },
                            "offer_min_amount": {
                                "type": "float"
                            },
                            "offer_percent": {
                                "type": "integer"
                            },
                            "description": {
                                "type": "text"
                            },
                            "country_id": {
                                "type": "integer"
                            },
                            "city_id": {
                                "type": "integer"
                            },
                            "commission": {
                                "type": "float"
                            },
                            "country_code": {
                                "type": "integer"
                            },
                            "picture": {
                                "type": "string"
                            },
                            "cuisine_id[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "1"
                            },
                            "_method": {
                                "type": "string",
                                "example": "PATCH"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/updateshop"
                    }
                ]
            },
            "storecategory": {
                "required": [
                    "store_category_name",
                    "store_id",
                    "store_category_description",
                    "picture"
                ],
                "properties": {
                    "store_category_name": {
                        "type": "string"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "store_category_description": {
                        "type": "text"
                    },
                    "picture": {
                        "type": "file"
                    },
                    "store_category_status": {
                        "type": "interger",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "storecategoryInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "store_category_name": {
                                "type": "string"
                            },
                            "store_id": {
                                "type": "integer"
                            },
                            "store_category_description": {
                                "type": "text"
                            },
                            "picture": {
                                "type": "file"
                            },
                            "store_category_status": {
                                "type": "interger",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/storecategory"
                    }
                ]
            },
            "updatecategory": {
                "required": [
                    "store_category_name",
                    "store_category_description"
                ],
                "properties": {
                    "store_category_name": {
                        "type": "string"
                    },
                    "store_category_description": {
                        "type": "text"
                    },
                    "_method": {
                        "type": "string",
                        "example": "PATCH"
                    },
                    "store_category_status": {
                        "type": "interger",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "updatecategoryInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "store_category_name": {
                                "type": "string"
                            },
                            "store_category_description": {
                                "type": "text"
                            },
                            "_method": {
                                "type": "string"
                            },
                            "store_category_status": {
                                "type": "interger"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/updatecategory"
                    }
                ]
            },
            "storeaddon": {
                "required": [
                    "addon_name",
                    "store_id"
                ],
                "properties": {
                    "addon_name": {
                        "type": "string"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "addon_status": {
                        "type": "interger",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "storeaddonInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "addon_name": {
                                "type": "string"
                            },
                            "store_id": {
                                "type": "integer"
                            },
                            "addon_status": {
                                "type": "interger"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/storeaddon"
                    }
                ]
            },
            "updateaddon": {
                "required": [
                    "addon_name"
                ],
                "properties": {
                    "addon_name": {
                        "type": "string"
                    },
                    "_method": {
                        "type": "string",
                        "example": "PATCH"
                    },
                    "addon_status": {
                        "type": "interger",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "updateaddonInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "addon_name": {
                                "type": "string"
                            },
                            "_method": {
                                "type": "string"
                            },
                            "addon_status": {
                                "type": "interger"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/updateaddon"
                    }
                ]
            },
            "storeitems": {
                "required": [
                    "item_name",
                    "store_id",
                    "store_category_id",
                    "item_price",
                    "picture"
                ],
                "properties": {
                    "item_name": {
                        "type": "string"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "item_description": {
                        "type": "TEXT"
                    },
                    "store_category_id": {
                        "type": "integer"
                    },
                    "is_veg": {
                        "type": "string",
                        "enum": [
                            "Pure Veg",
                            "Non Veg"
                        ]
                    },
                    "item_price": {
                        "type": "float"
                    },
                    "item_discount": {
                        "type": "float"
                    },
                    "item_discount_type": {
                        "type": "string",
                        "enum": [
                            "PERCENTAGE",
                            "AMOUNT"
                        ]
                    },
                    "picture": {
                        "type": "file"
                    },
                    "addon[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    "addon_price[]": {
                        "type": "array",
                        "items": {
                            "type": "float"
                        },
                        "example": "12.5"
                    },
                    "status": {
                        "type": "interger",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "storeitemsInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "item_name": {
                                "type": "string"
                            },
                            "store_id": {
                                "type": "integer"
                            },
                            "item_description": {
                                "type": "TEXT"
                            },
                            "store_category_id": {
                                "type": "integer"
                            },
                            "is_veg": {
                                "type": "string",
                                "enum": [
                                    "Pure Veg",
                                    "Non Veg"
                                ]
                            },
                            "item_price": {
                                "type": "float"
                            },
                            "item_discount": {
                                "type": "float"
                            },
                            "item_discount_type": {
                                "type": "string",
                                "enum": [
                                    "PERCENTAGE",
                                    "AMOUNT"
                                ]
                            },
                            "picture": {
                                "type": "file"
                            },
                            "addon[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "1"
                            },
                            "addon_price[]": {
                                "type": "array",
                                "items": {
                                    "type": "float"
                                },
                                "example": "12.5"
                            },
                            "status": {
                                "type": "interger",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/storeitems"
                    }
                ]
            },
            "updateitems": {
                "required": [
                    "item_name",
                    "store_id",
                    "store_category_id",
                    "item_price"
                ],
                "properties": {
                    "item_name": {
                        "type": "string"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "item_description": {
                        "type": "TEXT"
                    },
                    "store_category_id": {
                        "type": "integer"
                    },
                    "is_veg": {
                        "type": "string",
                        "enum": [
                            "Pure Veg",
                            "Non Veg"
                        ]
                    },
                    "item_price": {
                        "type": "float"
                    },
                    "item_discount": {
                        "type": "float"
                    },
                    "item_discount_type": {
                        "type": "string",
                        "enum": [
                            "PERCENTAGE",
                            "AMOUNT"
                        ]
                    },
                    "picture": {
                        "type": "file"
                    },
                    "_method": {
                        "type": "string",
                        "example": "PATCH"
                    },
                    "addon[]": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    "addon_price[]": {
                        "type": "array",
                        "items": {
                            "type": "float"
                        },
                        "example": "12.5"
                    },
                    "status": {
                        "type": "interger",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "updateitemsInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "item_name": {
                                "type": "string"
                            },
                            "store_id": {
                                "type": "integer"
                            },
                            "item_description": {
                                "type": "TEXT"
                            },
                            "store_category_id": {
                                "type": "integer"
                            },
                            "is_veg": {
                                "type": "string",
                                "enum": [
                                    "Pure Veg",
                                    "Non Veg"
                                ]
                            },
                            "item_price": {
                                "type": "float"
                            },
                            "item_discount": {
                                "type": "float"
                            },
                            "item_discount_type": {
                                "type": "string",
                                "enum": [
                                    "PERCENTAGE",
                                    "AMOUNT"
                                ]
                            },
                            "picture": {
                                "type": "file"
                            },
                            "_method": {
                                "type": "string",
                                "example": "PATCH"
                            },
                            "addon[]": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": "1"
                            },
                            "addon_price[]": {
                                "type": "array",
                                "items": {
                                    "type": "float"
                                },
                                "example": "12.5"
                            },
                            "status": {
                                "type": "interger",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/storeitems"
                    }
                ]
            },
            "updateshopstiming": {
                "properties": {
                    "_method": {
                        "type": "string",
                        "example": "PATCH"
                    },
                    "day['ALL']": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "SUN",
                                "MON",
                                "TUE",
                                "WED",
                                "THU",
                                "FRI",
                                "SAT"
                            ]
                        },
                        "example": "day['ALL'],day['SUN'],day['MON']"
                    },
                    "hours_opening['ALL']": {
                        "type": "array",
                        "items": {
                            "type": "time"
                        },
                        "example": "hours_opening['SUN']=12:00"
                    },
                    "hours_closing['ALL']": {
                        "type": "array",
                        "items": {
                            "type": "time"
                        },
                        "example": "hours_closing['SUN']=11:00"
                    }
                },
                "type": "object"
            },
            "updateshopstimingInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "_method": {
                                "type": "string",
                                "example": "PATCH"
                            },
                            "day['ALL']": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "ALL",
                                        "SUN",
                                        "MON",
                                        "TUE",
                                        "WED",
                                        "THU",
                                        "FRI",
                                        "SAT"
                                    ]
                                },
                                "example": "day['ALL'],day['SUN'],day['MON']"
                            },
                            "hours_opening['ALL']": {
                                "type": "array",
                                "items": {
                                    "type": "time"
                                },
                                "example": "hours_opening['SUN']=12:00"
                            },
                            "hours_closing['ALL']": {
                                "type": "array",
                                "items": {
                                    "type": "time"
                                },
                                "example": "hours_closing['SUN']=11:00"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/storeitems"
                    }
                ]
            },
            "CreateService": {
                "required": [
                    "service_id",
                    "s_latitude",
                    "s_longitude",
                    "payment_mode",
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "service_id": {
                        "type": "integer"
                    },
                    "s_latitude": {
                        "type": "string",
                        "example": "13.0389694"
                    },
                    "s_longitude": {
                        "type": "string",
                        "example": "80.2095246"
                    },
                    "payment_mode": {
                        "type": "string",
                        "enum": [
                            "CASH",
                            "CARD"
                        ],
                        "example": "CASH"
                    },
                    "schedule_date": {
                        "type": "string"
                    },
                    "schedule_time": {
                        "type": "string"
                    },
                    "use_wallet": {
                        "type": "integer"
                    },
                    "promocode_id": {
                        "type": "integer"
                    },
                    "allow_description": {
                        "type": "string"
                    },
                    "allow_image": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateServiceInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Provider ID",
                                "type": "integer"
                            },
                            "service_id": {
                                "description": "Service ID",
                                "type": "integer"
                            },
                            "s_longitude": {
                                "description": "User Latitude",
                                "type": "string"
                            },
                            "s_latitude": {
                                "description": "User Longitude",
                                "type": "string"
                            },
                            "payment_mode": {
                                "type": "string"
                            },
                            "schedule_date": {
                                "type": "string"
                            },
                            "schedule_time": {
                                "type": "string"
                            },
                            "use_wallet": {
                                "type": "string"
                            },
                            "promocode_id": {
                                "type": "integer"
                            },
                            "allow_description": {
                                "type": "string"
                            },
                            "allow_image": {
                                "type": "string"
                            },
                            "price": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateService"
                    }
                ]
            },
            "UserCancelService": {
                "required": [
                    "id",
                    "reason"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "cancel_reason_opt": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserCancelServiceInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "service request id",
                                "type": "integer"
                            },
                            "reason": {
                                "description": "reasons list select dropdown value",
                                "type": "string"
                            },
                            "cancel_reason_opt": {
                                "description": "optional. when choosing 'others' in cancel_reason this box will appear",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserCancelService"
                    }
                ]
            },
            "ServiceUpdatePayment": {
                "required": [
                    "id",
                    "payment_mode"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "13.0389694"
                    },
                    "payment_mode": {
                        "type": "string",
                        "enum": [
                            "CASH",
                            "CARD"
                        ],
                        "example": "CARD"
                    },
                    "card_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ServiceUpdatePaymentInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "payment_mode": {
                                "type": "string"
                            },
                            "card_id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ServiceUpdatePayment"
                    }
                ]
            },
            "UserServicePayment": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "tips": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserServicePaymentInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "tips": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserServicePayment"
                    }
                ]
            },
            "UserServiceRating": {
                "required": [
                    "id",
                    "rating"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserServiceRatingInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "rating"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "integer"
                            },
                            "comment": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserServiceRating"
                    }
                ]
            },
            "ProviderCancelService": {
                "required": [
                    "id",
                    "admin_service",
                    "reason"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "SERVICE"
                    },
                    "cancel": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderCancelServiceInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "admin_service": {
                                "type": "string"
                            },
                            "cancel": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderCancelService"
                    }
                ]
            },
            "UpdateServiceRequest": {
                "required": [
                    "_method",
                    "id",
                    "status"
                ],
                "properties": {
                    "_method": {
                        "type": "string",
                        "default": "PATCH"
                    },
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "STARTED",
                            "ARRIVED",
                            "PICKEDUP",
                            "DROPPED",
                            "COMPLETED",
                            "PAYMENT"
                        ],
                        "example": "ARRIVED"
                    },
                    "otp": {
                        "type": "string",
                        "example": ""
                    },
                    "before_picture": {
                        "type": "string",
                        "format": "binary"
                    },
                    "extra_charge": {
                        "type": "string"
                    },
                    "extra_charge_notes": {
                        "type": "string"
                    },
                    "after_picture": {
                        "type": "string",
                        "format": "binary"
                    },
                    "distance": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateServiceRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "_method": {
                                "type": "string"
                            },
                            "id": {
                                "description": "Service ID",
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "otp": {
                                "description": "During PICKEDUP",
                                "type": "string"
                            },
                            "before_picture": {
                                "description": "During PICKEDUP",
                                "type": "string"
                            },
                            "extra_charge": {
                                "description": "During DROPPED",
                                "type": "string"
                            },
                            "extra_charge_notes": {
                                "description": "During DROPPED",
                                "type": "string"
                            },
                            "after_picture": {
                                "description": "During DROPPED",
                                "type": "string"
                            },
                            "distance": {
                                "description": "During DROPPED",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateServiceRequest"
                    }
                ]
            },
            "ProviderServiceRating": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "string",
                        "example": "5"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Test"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "SERVICE"
                    }
                },
                "type": "object"
            },
            "ProviderServiceRatingInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "rating",
                            "admin_service"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "integer"
                            },
                            "comment": {
                                "type": "string"
                            },
                            "admin_service": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderServiceRating"
                    }
                ]
            },
            "UserServiceDispute": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_type": {
                        "type": "string",
                        "example": "user"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "provider_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_name": {
                        "type": "string",
                        "example": "Not Interested"
                    },
                    "comments": {
                        "type": "string",
                        "example": "No Response"
                    }
                },
                "type": "object"
            },
            "UserServiceDisputeInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "dispute_type",
                            "user_id",
                            "provider_id",
                            "dispute_name"
                        ],
                        "properties": {
                            "id": {
                                "description": "Service request id",
                                "type": "integer"
                            },
                            "dispute_type": {
                                "type": "string"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "provider_id": {
                                "type": "integer"
                            },
                            "dispute_name": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserServiceDispute"
                    }
                ]
            },
            "ProviderServiceDispute": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_type": {
                        "type": "string",
                        "example": "provider"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "provider_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_name": {
                        "type": "string",
                        "example": "Not Interested"
                    },
                    "comments": {
                        "type": "string",
                        "example": "No Response"
                    }
                },
                "type": "object"
            },
            "ProviderServiceDisputeInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "dispute_type",
                            "user_id",
                            "provider_id",
                            "dispute_name"
                        ],
                        "properties": {
                            "id": {
                                "description": "Service request id",
                                "type": "integer"
                            },
                            "dispute_type": {
                                "type": "string"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "provider_id": {
                                "type": "integer"
                            },
                            "dispute_name": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderServiceDispute"
                    }
                ]
            },
            "TransportEstimate": {
                "required": [
                    "s_latitude",
                    "s_longitude",
                    "service_type",
                    "d_latitude",
                    "d_longitude"
                ],
                "properties": {
                    "s_latitude": {
                        "type": "string",
                        "example": "13.0389694"
                    },
                    "s_longitude": {
                        "type": "string",
                        "example": "80.2095246"
                    },
                    "service_type": {
                        "type": "string"
                    },
                    "d_latitude": {
                        "type": "string",
                        "example": "13.0102357"
                    },
                    "d_longitude": {
                        "type": "string",
                        "example": "80.2156510"
                    }
                },
                "type": "object"
            },
            "TransportEstimateInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "s_latitude": {
                                "type": "string"
                            },
                            "s_longitude": {
                                "type": "integer"
                            },
                            "service_type": {
                                "type": "integer"
                            },
                            "d_latitude": {
                                "type": "string"
                            },
                            "d_longitude": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/TransportEstimate"
                    }
                ]
            },
            "TransportCreateRequest": {
                "required": [
                    "s_latitude",
                    "s_longitude",
                    "s_address",
                    "service_type",
                    "d_latitude",
                    "d_longitude",
                    "d_address",
                    "payment_mode",
                    "ride_type_id"
                ],
                "properties": {
                    "s_latitude": {
                        "type": "string",
                        "example": "13.0389694"
                    },
                    "s_longitude": {
                        "type": "string",
                        "example": "80.2095246"
                    },
                    "s_address": {
                        "type": "string",
                        "example": "Chennai"
                    },
                    "service_type": {
                        "type": "string"
                    },
                    "d_latitude": {
                        "type": "string",
                        "example": "13.0102357"
                    },
                    "d_longitude": {
                        "type": "string",
                        "example": "80.2156510"
                    },
                    "d_address": {
                        "type": "string",
                        "example": "Trichy"
                    },
                    "payment_mode": {
                        "type": "string",
                        "enum": [
                            "CASH",
                            "CARD"
                        ],
                        "example": "CASH"
                    },
                    "use_wallet": {
                        "type": "integer"
                    },
                    "schedule_date": {
                        "type": "string"
                    },
                    "schedule_time": {
                        "type": "string"
                    },
                    "someone": {
                        "type": "string"
                    },
                    "someone_email": {
                        "type": "string"
                    },
                    "someone_mobile": {
                        "type": "integer"
                    },
                    "wheel_chair": {
                        "type": "integer"
                    },
                    "child_seat": {
                        "type": "integer"
                    },
                    "card_id": {
                        "type": "string"
                    },
                    "ride_type_id": {
                        "type": "integer"
                    },
                    "promocode_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransportCreateRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "s_latitude": {
                                "type": "string"
                            },
                            "s_longitude": {
                                "type": "integer"
                            },
                            "s_address": {
                                "type": "integer"
                            },
                            "service_type": {
                                "type": "integer"
                            },
                            "d_latitude": {
                                "type": "string"
                            },
                            "d_longitude": {
                                "type": "string"
                            },
                            "d_address": {
                                "type": "string"
                            },
                            "payment_mode": {
                                "type": "string"
                            },
                            "use_wallet": {
                                "type": "integer"
                            },
                            "schedule_date": {
                                "type": "string"
                            },
                            "schedule_time": {
                                "type": "string"
                            },
                            "someone": {
                                "type": "string"
                            },
                            "someone_email": {
                                "type": "string"
                            },
                            "someone_mobile": {
                                "type": "integer"
                            },
                            "wheel_chair": {
                                "type": "integer"
                            },
                            "child_seat": {
                                "type": "integer"
                            },
                            "card_id": {
                                "type": "string"
                            },
                            "ride_type_id": {
                                "type": "integer"
                            },
                            "promocode_id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/TransportCreateRequest"
                    }
                ]
            },
            "UserTransportCancelRequest": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserTransportCancelRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserTransportCancelRequest"
                    }
                ]
            },
            "UserTransportPayment": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "tips": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserTransportPaymentInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "tips": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserTransportPayment"
                    }
                ]
            },
            "TransportUpdatePayment": {
                "required": [
                    "id",
                    "payment_mode"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "13.0389694"
                    },
                    "payment_mode": {
                        "type": "string",
                        "enum": [
                            "CASH",
                            "CARD"
                        ],
                        "example": "CARD"
                    },
                    "card_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransportUpdatePaymentInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "payment_mode": {
                                "type": "string"
                            },
                            "card_id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/TransportUpdatePayment"
                    }
                ]
            },
            "UserTransportRating": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "string",
                        "example": "5"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Test"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "TRANSPORT"
                    }
                },
                "type": "object"
            },
            "UserTransportRatingInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "rating",
                            "admin_service"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "integer"
                            },
                            "comment": {
                                "type": "string"
                            },
                            "admin_service": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserTransportRating"
                    }
                ]
            },
            "TransportExtend": {
                "required": [
                    "id",
                    "latitude",
                    "longitude",
                    "address"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "13.0389694"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "80.2095246"
                    },
                    "address": {
                        "type": "string",
                        "example": "Chennai"
                    }
                },
                "type": "object"
            },
            "TransportExtendInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "integer"
                            },
                            "longitude": {
                                "type": "integer"
                            },
                            "address": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/TransportExtend"
                    }
                ]
            },
            "ProviderCancelRide": {
                "required": [
                    "id",
                    "admin_service",
                    "reason"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "TRANSPORT"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderCancelRideInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "admin_service": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderCancelRide"
                    }
                ]
            },
            "UpdateRideRequest": {
                "required": [
                    "_method",
                    "id",
                    "status"
                ],
                "properties": {
                    "_method": {
                        "type": "string",
                        "default": "PATCH",
                        "example": "PATCH"
                    },
                    "id": {
                        "type": "string",
                        "example": ""
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACCEPTED",
                            "STARTED",
                            "ARRIVED",
                            "PICKEDUP",
                            "DROPPED",
                            "COMPLETED"
                        ],
                        "example": "ACCEPTED"
                    },
                    "otp": {
                        "description": "During PICKEDUP",
                        "type": "string",
                        "example": ""
                    },
                    "d_latitude": {
                        "description": "During DROPPED - User Completes Ride Before Destination",
                        "type": "string",
                        "example": ""
                    },
                    "d_longitude": {
                        "description": "During DROPPED - User Completes Ride Before Destination",
                        "type": "string",
                        "example": ""
                    },
                    "d_address": {
                        "description": "During DROPPED - User Completes Ride Before Destination",
                        "type": "string",
                        "example": ""
                    },
                    "latitude": {
                        "description": "During DROPPED with Location Points",
                        "type": "string",
                        "example": ""
                    },
                    "longitude": {
                        "description": "During DROPPED with Location Points",
                        "type": "string",
                        "example": ""
                    },
                    "distance": {
                        "description": "During DROPPED with Location Points",
                        "type": "string",
                        "example": ""
                    },
                    "location_points": {
                        "description": "During DROPPED",
                        "type": "array",
                        "items": {
                            "properties": {
                                "lat": {
                                    "type": "string",
                                    "example": "13.0389694"
                                },
                                "lng": {
                                    "type": "string",
                                    "example": "80.2095246"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "toll_price": {
                        "description": "During DROPPED",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateRideRequestInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "_method": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "otp": {
                                "type": "string"
                            },
                            "d_latitude": {
                                "type": "string"
                            },
                            "d_longitude": {
                                "type": "string"
                            },
                            "d_address": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "string"
                            },
                            "longitude": {
                                "type": "string"
                            },
                            "distance": {
                                "type": "string"
                            },
                            "location_points": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "lat": {
                                            "type": "string"
                                        },
                                        "lng": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "toll_price": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateRideRequest"
                    }
                ]
            },
            "ProviderWaiting": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderWaitingInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "status": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderWaiting"
                    }
                ]
            },
            "ProviderPayment": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderPaymentInput": {
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderPayment"
                    }
                ]
            },
            "ProviderTransportRating": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "string",
                        "example": "5"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Test"
                    },
                    "admin_service": {
                        "type": "string",
                        "enum": [
                            "TRANSPORT",
                            "ORDER",
                            "SERVICE"
                        ],
                        "example": "TRANSPORT"
                    }
                },
                "type": "object"
            },
            "ProviderTransportRatingInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "rating",
                            "admin_service"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "integer"
                            },
                            "comment": {
                                "type": "string"
                            },
                            "admin_service": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderTransportRating"
                    }
                ]
            },
            "UserTransportDispute": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_type": {
                        "type": "string",
                        "example": "user"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "provider_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_name": {
                        "type": "string",
                        "example": "Not Interested"
                    },
                    "comments": {
                        "type": "string",
                        "example": "No Response"
                    }
                },
                "type": "object"
            },
            "UserTransportDisputeInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "dispute_type",
                            "user_id",
                            "provider_id",
                            "dispute_name"
                        ],
                        "properties": {
                            "id": {
                                "description": "ride request id",
                                "type": "integer"
                            },
                            "dispute_type": {
                                "type": "string"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "provider_id": {
                                "type": "integer"
                            },
                            "dispute_name": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UserTransportDispute"
                    }
                ]
            },
            "ProviderTransportDispute": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_type": {
                        "type": "string",
                        "example": "provider"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "provider_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dispute_name": {
                        "type": "string",
                        "example": "Not Interested"
                    },
                    "comments": {
                        "type": "string",
                        "example": "No Response"
                    }
                },
                "type": "object"
            },
            "ProviderTransportDisputeInput": {
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "id",
                            "dispute_type",
                            "user_id",
                            "provider_id",
                            "dispute_name"
                        ],
                        "properties": {
                            "id": {
                                "description": "ride request id",
                                "type": "integer"
                            },
                            "dispute_type": {
                                "type": "string"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "provider_id": {
                                "type": "integer"
                            },
                            "dispute_name": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ProviderTransportDispute"
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Admin, User and Provider Authentication APIs"
        },
        {
            "name": "Base",
            "description": "Base APIs"
        },
        {
            "name": "Authentication",
            "description": "Authentication APIs"
        },
        {
            "name": "Common",
            "description": "Common APIs"
        },
        {
            "name": "Transport",
            "description": "Transport Flow APIs"
        },
        {
            "name": "Order",
            "description": "Order Flow APIs"
        },
        {
            "name": "Service",
            "description": "Service Flow APIs"
        }
    ]
}